@model Exam_Info.Models.Tbl_State_Co_Ordinator_Registration
@{
    ViewBag.Title = "State_Edit_profile";
    Layout = "~/Views/Shared/State_LayoutPage.cshtml";
}

<style>
    label {
        font-size: 15px !important;
        font-weight: bold;
    }
</style>
<form id="submit_form">
    <div class="container-fluid page-body-wrapper full-page-wrapper">
        <div class="content-wrapper d-flex align-items-stretch auth auth-img-bg">
            <div class="auth-form-transparent text-left p-3">
                <br />
                <div class="form-group">
                    <center> <h2>State Co-Ordinator Edit Profile</h2></center>   <br />
                    <div class="row">
                        @Html.HiddenFor(model => model.ID)
                        <div class="col-sm-4">
                            <label for="Index No">Index No</label><span style="color:Red">*</span>
                            @Html.TextBoxFor(model => model.Index_No, new { @class = "form-control", @placeholder = "Index No", @name = "Index_No", @required = "required", maxLength = 7 })
                            @Html.ValidationMessageFor(model => model.Index_No, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-sm-4">
                            <label for="College Name">College Name</label><span style="color:Red">*</span>
                            @Html.TextBoxFor(model => model.College_Name, new { @class = "form-control", @placeholder = "College Name", @name = "College_Name", @required = "required" })
                            @Html.ValidationMessageFor(model => model.College_Name, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4">
                            <label for="College Addres">College Address</label><span style="color:Red">*</span>
                            @Html.TextBoxFor(model => model.College_Address, new { @class = "form-control", @placeholder = "College Address", @name = "College_Name", @required = "required" })
                            @Html.ValidationMessageFor(model => model.College_Address, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="col-sm-4">
                        <label for="Coordinator Name">Co-ordinator Name</label><span style="color:Red">*</span>
                        @Html.TextBoxFor(model => model.Coordinator_Name, new { @class = "form-control", @placeholder = "Co-ordinator Name", @name = "Principal_Mobile ", maxLength = 10, @required = "required" })
                        @Html.ValidationMessageFor(model => model.Coordinator_Name, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-sm-4">
                        <label for="Coordinator Mobile">Co-ordinator Mobile</label><span style="color:Red">*</span>
                        @Html.TextBoxFor(model => model.Coordinator_Mobile, new { @class = "form-control", @placeholder = "Co-ordinator Mobile", @name = "Principal_Name ", @required = "required" })
                        @Html.ValidationMessageFor(model => model.Coordinator_Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />

                <div class="row">
                    <div class="col-sm-4">
                        <label for="Coordinator Email">Co-ordinator Email</label><span style="color:Red">*</span>
                        @Html.TextBoxFor(model => model.Coordinator_Email, new { @class = "form-control", @placeholder = "Co-ordinator Email", @name = "Total_Students ", maxLength = 4 })
                        @Html.ValidationMessageFor(model => model.Coordinator_Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-4">
                        <label for="Coordinator Eduction">Co-ordinator Eduction</label><span style="color:Red">*</span>
                        @Html.TextBoxFor(model => model.Coordinator_Eduction, new { @class = "form-control", @placeholder = "Co-ordinator Eduction", @name = "Total_Machines ", maxLength = 4 })
                        @Html.ValidationMessageFor(model => model.Coordinator_Eduction, "", new { @class = "text-danger" })
                    </div>

                </div>
                <br />

                <div class="row">
                    <div class="col-sm-4">
                        <label for="Password">Password</label><span style="color:Red">*</span>
                        @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @placeholder = "Password", @name = "Password ", @type = "Password" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-sm-4">
                        <label for="Confirm_Password">Confirm Password</label><span style="color:Red">*</span>
                        @Html.TextBoxFor(model => model.Confirm_Password, new { @class = "form-control", @placeholder = "Confirm Password", @name = "Confirm_Password" })
                        @Html.ValidationMessageFor(model => model.Confirm_Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
             
                    <center>
                        <input type="button" id="btn_submit" class="btn btn-success" value="Update" onclick="return confirm('Do you want to save ?')">
                    </center>
              
            </div>
        </div>
    </div>
</form>
<script>
    $(document).ready(function () {

        $("#btn_submit").click(function (e) {
            var formData = new FormData($(submit_form)[0]);

            $.ajax({
                url: "State_Edit_profile",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                beforeSend: function () {
                    Showloader();
                },
                complete: function () {
                    Hideloader();
                },
                success: function (Data) {
                    if (Data.Result) {
                        Success_Alert(Data.Response);
                    }
                    else {
                        Error_Alert(Data.Response);
                    }

                },
                error: function (e1, e2, e3) {
                    Error_Alert(Data.Response);
                }
            });
        })

    })</script>

